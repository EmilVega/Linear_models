setwd("~/Documentos/2017/Modelo Lineal/Exercises/R code 7")
# Reading the data
data <- read.table("data01.txt",
header=T, sep=";")
data
# Suppose we know sigma^2
s2 <- 2.5
# Building the Matrices
n <- nrow(data); n
j <- as.vector(rep(1,n)); j
X <- as.matrix(cbind(x0=j, x1=data$x)); X
Y <- data$y; Y
# Fitting original model
Xt <- t(X)
XtX <- Xt %*% X
XtXinv <- solve(XtX)
B1 <- XtXinv %*% Xt %*% Y
B1
VB1 <- s2 * XtXinv
VB1
# Now suppose that V <> I
V <- diag(ifelse(data$x==0,1,data$x))
V
Vinv <- solve(V)
Vinv
# Fitting GLS model
XVX <- solve(Xt %*% Vinv %*% X)
XVX
B2 <- XVX %*% Xt %*% Vinv %*% Y
B2
VB2 <- s2 * XVX
VB2
# The incorrect variance
VB2_inc <- s2 * XtXinv %*% Xt %*%
V %*% X %*% XtXinv
VB2_inc
# The Generalized Variance |Sigma|
det(VB2_in)
det(VB2)
# Cholesky decomposition
V_Ch <- chol(V)
V_Ch
V_Ch %*% t(V_Ch)
V
# The Generalized Variance |Sigma|
det(VB2_inc)
det(VB2)
# Cholesky decomposition
V_Ch <- chol(V)
V_Ch
V_Ch %*% t(V_Ch)
V
setwd("~/Documentos/2017/Modelo Lineal/Exercises/R code 8")
require(ggplot2)
# Normal
ggplot(NULL, aes(xmin = -4, xmax = 4)) +
stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
lwd = 2, col = 'blue') +
xlab("x") +
scale_x_continuous(bquote(mu),
labels=NULL) +
ggtitle(bquote(paste('Normal Dist. (', mu, ', ', sigma^2, '=1)')))
setwd("~/Documentos/2017/Modelo Lineal/Exercises/R code 9")
setwd("~/Documentos/2017/Modelo Lineal/Exercises/R code 10")
setwd("~/Documentos/2017/Modelo Lineal/Exercises/R code 11")
install.packages("ggplot2")
require(ggplot2)
# Normal
ggplot(NULL, aes(xmin = -4, xmax = 4)) +
stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
lwd = 2, col = 'blue') +
xlab("x") +
scale_x_continuous(bquote(mu),
labels=NULL) +
ggtitle(bquote(paste('Normal Dist. (', mu, ', ', sigma^2, '=1)')))
require(ggplot2)
# Chi-Square
ggplot(NULL, aes(xmin = 0, xmax = 25)) +
stat_function(fun = dchisq,
args = list(df = 4, ncp = 0),
lwd = 2, col = 'blue') +
stat_function(fun = dchisq,
args = list(df = 4, ncp = 8),
lwd = 2, col = 'red') +
xlab("x") +
scale_x_continuous() +
geom_text(x=5, y=0.15,
aes(label=paste("lambda==0"),
group=NULL), size = 4,
color = "blue", parse = T) +
geom_text(x=15, y=0.07,
aes(label=paste("lambda==8"),
group=NULL), size = 4,
color = "red", parse = T) +
ggtitle(bquote(paste('Distribution: ',
chi^2, '(4)')))
require(ggplot2)
# F-Snedecor
ggplot(NULL, aes(xmin = 0, xmax = 10)) +
stat_function(fun = df,
args = list(df1=20, df2=15, ncp = 0),
lwd = 2, col = 'blue') +
stat_function(fun = df,
args = list(df1=20, df2=15, ncp = 25),
lwd = 2, col = 'red') +
xlab("x") +
scale_x_continuous() +
geom_text(x=2, y=0.7,
aes(label=paste("lambda==0"),
group=NULL), size = 4,
color = "blue", parse = T) +
geom_text(x=5, y=0.2,
aes(label=paste("lambda==25"),
group=NULL), size = 4,
color = "red", parse = T) +
ggtitle(bquote(paste('Distribution: ',
F['(20, 15)'])))
require(ggplot2)
# Chi-Square
ggplot(NULL, aes(xmin = 0, xmax = 25)) +
stat_function(fun = dchisq,
args = list(df = 4, ncp = 0),
lwd = 2, col = 'blue') +
stat_function(fun = dchisq,
args = list(df = 4, ncp = 8),
lwd = 2, col = 'red') +
xlab("x") +
scale_x_continuous() +
geom_text(x=5, y=0.15,
aes(label=paste("lambda==0"),
group=NULL), size = 4,
color = "blue", parse = T) +
geom_text(x=15, y=0.07,
aes(label=paste("lambda==8"),
group=NULL), size = 4,
color = "red", parse = T) +
ggtitle(bquote(paste('Distribution: ',
chi^2, '(4)')))
require(ggplot2)
# t-Student
ggplot(NULL, aes(xmin = -10, xmax = 20)) +
stat_function(fun = dt,
args = list(df = 3, ncp = 0),
lwd = 2, col = 'blue') +
stat_function(fun = dt,
args = list(df = 3, ncp = 5),
lwd = 2, col = 'red') +
xlab("x") +
scale_x_continuous() +
geom_text(x=2.5, y=0.3,
aes(label=paste("lambda==0"),
group=NULL), size = 4,
color = "blue", parse = T) +
geom_text(x=5, y=0.2,
aes(label=paste("lambda==5"),
group=NULL), size = 4,
color = "red", parse = T) +
ggtitle(bquote(paste('Distribution: ',
t['(3)'])))
require(ggplot2)
# F-Snedecor
ggplot(NULL, aes(xmin = 0, xmax = 10)) +
stat_function(fun = df,
args = list(df1=20, df2=15, ncp = 0),
lwd = 2, col = 'blue') +
stat_function(fun = df,
args = list(df1=20, df2=15, ncp = 25),
lwd = 2, col = 'red') +
xlab("x") +
scale_x_continuous() +
geom_text(x=2, y=0.7,
aes(label=paste("lambda==0"),
group=NULL), size = 4,
color = "blue", parse = T) +
geom_text(x=5, y=0.2,
aes(label=paste("lambda==25"),
group=NULL), size = 4,
color = "red", parse = T) +
ggtitle(bquote(paste('Distribution: ',
F['(20, 15)'])))
require(ggplot2)
# Chi-Square
ggplot(NULL, aes(xmin = 0, xmax = 25)) +
stat_function(fun = dchisq,
args = list(df = 4, ncp = 0),
lwd = 2, col = 'blue') +
stat_function(fun = dchisq,
args = list(df = 4, ncp = 8),
lwd = 2, col = 'red') +
xlab("x") +
scale_x_continuous() +
geom_text(x=5, y=0.15,
aes(label=paste("lambda==0"),
group=NULL), size = 4,
color = "blue", parse = T) +
geom_text(x=15, y=0.07,
aes(label=paste("lambda==8"),
group=NULL), size = 4,
color = "red", parse = T) +
ggtitle(bquote(paste('Distribution: ',
chi^2, '(4)')))
