setwd("~/Documentos/2017/Modelo Lineal/Exercises/last practice")
library(ggplot2)
# y: lymphocyte count
# x1: hemoglobin concentration
# x2: packed-cell volume
# x3: white blood cell count
# x4: neutrophil count
# x5: serum lead concentration
# Leyendo los datos
dat <- read.table("ej10.txt", header=T, sep=";", dec=".")
dat
mod <- lm(y~x1+x2+x3+x4+x5, data=dat,x=TRUE)
mod
summary(mod)
mod1 <- lm(y~x3+x4, data=dat,x=TRUE)
mod1
summary(mod1)
confint(mod1)
plot(mod1)
res <- residuals(mod1)
res
sum(res)
plot(res)
py <- fitted(mod1)
py
pDat <- as.data.frame(cbind(i=seq(1:nrow(dat)), e=res,
yf=py, x3=dat$x3, x4=dat$x4))
pDat
# Scatter plot e vs y
ggplot(pDat, aes(x = yf, y = e)) +
geom_point(colour="darkblue", shape=21, size=2) +
ylab("Residuals") +
xlab("Fitted values")
# Scatter plot e vs x3
ggplot(pDat, aes(x = x3, y = e)) +
geom_point(colour="darkblue", shape=21, size=2) +
ylab("Residuals") +
xlab("x3 values")
# Scatter plot e vs x4
ggplot(pDat, aes(x = x4, y = e)) +
geom_point(colour="darkblue", shape=21, size=2) +
ylab("Residuals") +
xlab("x4 values")
#How about H?
H <- mod1$x %*% solve(t(mod1$x) %*% mod1$x) %*% t(mod1$x)
H[1:6,1:6]
# Scatter plot e vs i
ggplot(pDat, aes(x=i, y = e)) +
geom_point(colour="darkblue", shape=21, size=2) +
ylab("Residuals") +
xlab("Time")
res1 <- rstandard(mod1)
res1
res2 <- rstudent(mod1)
res2
pDat <- cbind(pDat, rStan=res1, rStud=res2)
pDat
# Scatter plot e vs y
ggplot(pDat, aes(x = yf, y = e)) +
geom_point(colour="darkblue", shape=21, size=2) +
ylab("Residuals") +
xlab("Fitted values")
ggplot(pDat, aes(x = yf, y = rStan)) +
geom_point(colour="darkblue", shape=21, size=2) +
ylab("Standarized Residuals") +
xlab("Fitted values")
ggplot(pDat, aes(x = yf, y = rStud)) +
geom_point(colour="darkblue", shape=21, size=2) +
ylab("Studentized Residuals") +
xlab("Fitted values")
ggplot(pDat) +
geom_point(aes(x = yf, y = e), colour="darkblue", shape=16, size=2) +
geom_point(aes(x = yf, y = rStan), colour="darkred", shape=17, size=2) +
geom_point(aes(x = yf, y = rStud), colour="yellow", shape=18, size=2) +
ylab("Residuals") +
xlab("Fitted values")
ggplot(pDat) +
geom_point(aes(x = i, y = e), colour="darkblue", shape=16, size=2) +
geom_point(aes(x = i, y = rStan), colour="darkred", shape=17, size=2) +
geom_point(aes(x = i, y = rStud), colour="yellow", shape=18, size=2) +
ylab("Residuals") +
xlab("Index")
# Scatter plot x3 vs y
ggplot(dat, aes(x = x3, y = y)) +
geom_point(colour="darkblue", shape=21, size=2) +
geom_smooth(method='lm', colour="red", se=TRUE) +
geom_point(aes(x=84, y=61), data=dat, size=10, shape=1, color='green') +
geom_segment(aes(x=84,y=52,xend=84,yend=58), lwd = 0.2, col = 'darkgreen',
arrow = arrow(length = unit(0.03, "npc"))) +
geom_point(aes(x=52, y=8), data=dat, size=10, shape=1, color='green') +
geom_segment(aes(x=52,y=-1,xend=52,yend=5), lwd = 0.2, col = 'darkgreen',
arrow = arrow(length = unit(0.03, "npc"))) +
ylab("y") +
xlab("x3")
# Scatter plot x4 vs y
ggplot(dat, aes(x = x4, y = y)) +
geom_point(colour="darkblue", shape=21, size=2) +
geom_smooth(method='lm', colour="red", se=TRUE) +
geom_point(aes(x=42, y=34), data=dat, size=10, shape=1, color='green') +
geom_segment(aes(x=37,y=34,xend=41,yend=34), lwd = 0.2, col = 'darkgreen',
arrow = arrow(length = unit(0.03, "npc"))) +
geom_point(aes(x=17, y=61), data=dat, size=10, shape=1, color='green') +
geom_segment(aes(x=17,y=53,xend=17,yend=59), lwd = 0.2, col = 'darkgreen',
arrow = arrow(length = unit(0.03, "npc"))) +
ylab("y") +
xlab("x4")
hv <- diag(H); hv
hatvalues(mod1)
lmax <- 2*(ncol(mod1$x)+1)/nrow(mod1$x); lmax
cd <- round(cooks.distance(mod1),6); cd
sx4 <- as.data.frame(sort(dat$x4, decreasing=T,
index.return=T))
sx4_y <- cbind(sx4, y=dat$y[sx4$ix], h=hv[sx4$ix],
c=cd[sx4$ix]); sx4_y
sy <- as.data.frame(sort(dat$y, decreasing=T,
index.return=T))
sy_x4 <- cbind(sy, x4=dat$x4[sy$ix], h=hv[sy$ix],
c=cd[sy$ix]); sy_x4
#### Q-Q Plot
# Standarized residuals are:
res1
# Now we calculate observed quantiles:
res1_y <- quantile(res1, c(0.25, 0.75))
res1_y
# And then the theoretical quantiles
# (assuming that the residuals comes from a standard normal distribution):
res1_x <- qnorm(c(0.25, 0.75))
res1_x
# Calculating the slope of the line
slope <- diff(res1_y)/diff(res1_x)
# Calculating the intercept of the line
inter <- res1_y[1] - slope * res1_x[1]
# Finally:
ggplot(as.data.frame(res1), aes(sample=res1))+
stat_qq() +
geom_abline(slope = slope, intercept = inter, color="blue")
library(ggplot2)
# y: lymphocyte count
# x1: hemoglobin concentration
# x2: packed-cell volume
# x3: white blood cell count
# x4: neutrophil count
# x5: serum lead concentration
# Leyendo los datos
dat <- read.table("ej10.txt", header=T, sep=";", dec=".")
dat
mod <- lm(y~x1+x2+x3+x4+x5, data=dat,x=TRUE)
mod
summary(mod)
mod1 <- lm(y~x3+x4, data=dat,x=TRUE)
mod1
summary(mod1)
confint(mod1)
plot(mod1)
res <- residuals(mod1)
res
sum(res)
plot(res)
py <- fitted(mod1)
py
pDat <- as.data.frame(cbind(i=seq(1:nrow(dat)), e=res,
yf=py, x3=dat$x3, x4=dat$x4))
pDat
# Scatter plot e vs y
ggplot(pDat, aes(x = yf, y = e)) +
geom_point(colour="darkblue", shape=21, size=2) +
ylab("Residuals") +
xlab("Fitted values")
clear
library(ggplot2)
# y: lymphocyte count
# x1: hemoglobin concentration
# x2: packed-cell volume
# x3: white blood cell count
# x4: neutrophil count
# x5: serum lead concentration
# Leyendo los datos
dat <- read.table("ej10.txt", header=T, sep=";", dec=".")
dat
mod <- lm(y~x1+x2+x3+x4+x5, data=dat,x=TRUE)
mod
summary(mod)
mod1 <- lm(y~x3+x4, data=dat,x=TRUE)
mod1
summary(mod1)
confint(mod1)
plot(mod1)
res <- residuals(mod1)
res
sum(res)
plot(res)
py <- fitted(mod1)
py
pDat <- as.data.frame(cbind(i=seq(1:nrow(dat)), e=res,
yf=py, x3=dat$x3, x4=dat$x4))
pDat
# Scatter plot e vs y
ggplot(pDat, aes(x = yf, y = e)) +
geom_point(colour="darkblue", shape=21, size=2) +
ylab("Residuals") +
xlab("Fitted values")
library(ggplot2)
# y: lymphocyte count
# x1: hemoglobin concentration
# x2: packed-cell volume
# x3: white blood cell count
# x4: neutrophil count
# x5: serum lead concentration
# Leyendo los datos
dat <- read.table("ej10.txt", header=T, sep=";", dec=".")
dat
mod <- lm(y~x1+x2+x3+x4+x5, data=dat,x=TRUE)
mod
summary(mod)
mod1 <- lm(y~x3+x4, data=dat,x=TRUE)
mod1
summary(mod1)
confint(mod1)
plot(mod1)
res <- residuals(mod1)
res
sum(res)
plot(res)
py <- fitted(mod1)
py
pDat <- as.data.frame(cbind(i=seq(1:nrow(dat)), e=res,
yf=py, x3=dat$x3, x4=dat$x4))
pDat
# Scatter plot e vs y
ggplot(pDat, aes(x = yf, y = e)) +
geom_point(colour="darkblue", shape=21, size=2) +
ylab("Residuals") +
xlab("Fitted values")
# Scatter plot e vs x3
ggplot(pDat, aes(x = x3, y = e)) +
geom_point(colour="darkblue", shape=21, size=2) +
ylab("Residuals") +
xlab("x3 values")
library(ggplot2)
data<-read.table("tab14.7.txt",header=T,sep=",")
data
ggplot(data,aes(R,y)) + geom_point()
ggplot(data,aes(M,y)) + geom_point()
ggplot(data, aes(R,y)) + geom_boxplot()
ggplot(data, aes(M,y)) + geom_boxplot()
mod <- lm(y~R*M, data=data, x=T)
mod
mod$x
summary(mod)
anova(mod)
library(ggplot2)
data<-read.table("tab14.7.txt",header=T,sep=",")
data
ggplot(data,aes(R,y)) + geom_point()
ggplot(data,aes(M,y)) + geom_point()
ggplot(data, aes(R,y)) + geom_boxplot()
ggplot(data, aes(M,y)) + geom_boxplot()
mod <- lm(y~R*M, data=data, x=T)
mod
mod$x
summary(mod)
anova(mod)
